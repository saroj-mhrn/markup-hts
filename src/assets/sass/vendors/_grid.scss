// ---------------------------------------------------------===
// Grid generation
// ---------------------------------------------------------===
@use "sass:math";
@import '../base/variables';

$grid-gutter-mobile: false !default;
$container-gutter: false !default;

@mixin make-column($columns, $grid-gutter) {
  width: percentage(math.div($columns , $grid-count));
}

@mixin make-offset($columns, $grid-gutter) {
  margin-left: percentage(math.div($columns , $grid-count));
}

@mixin make-row($grid-gutter){
  margin-left: math.div($grid-gutter, -2);
  margin-right: math.div($grid-gutter, -2);

  @if $grid-gutter-mobile {
    @include media('<tablet') {
      margin-left: math.div($grid-gutter-mobile , -2);
      margin-right: math.div($grid-gutter-mobile , -2);
    }
  }
}

@mixin make-gutter($grid-gutter) {
  padding-left: math.div($grid-gutter , 2);
  padding-right: math.div($grid-gutter , 2);

  @if $grid-gutter-mobile {
    @include media('<tablet') {
      padding-left: math.div($grid-gutter-mobile , 2);
      padding-right: math.div($grid-gutter-mobile , 2);
    }
  }
}

@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-xls-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
  @for $i from (1 + 1) through $grid-count {
    $list: "#{$list}, .col-xs-#{$i}, .col-xls-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
  }

  #{$list} {
    @include make-gutter($grid-gutter);
    position: relative;
    min-height: 1px;
    width: 100%;
  }

  @for $i from (1) through $grid-count {
    .#{col-xs}-#{$i} {
      @include make-column($i,20)
    }
    
    .#{col-xs-offset}-#{$i} {
      @include make-offset($i,20)
    }
  }

  @include media('>=phone') {
    @for $i from (1) through $grid-count {
      .#{col-xls}-#{$i} {
        @include make-column($i,20)
      }

      .#{col-xls-offset}-#{$i} {
        @include make-offset($i,20)
      }
    }
  }
  
  @include media('>=tablet') {
    @for $i from (1) through $grid-count {
      .#{col-sm}-#{$i} {
        @include make-column($i,20)
      }

      .#{col-sm-offset}-#{$i} {
        @include make-offset($i,20)
      }
    }
  }
  
  @include media('>=desktop') {
    @for $i from (1) through $grid-count {
      .#{col-md}-#{$i} {
        @include make-column($i,20)
      }

      .#{col-md-offset}-#{$i} {
        @include make-offset($i,20)
      }
    }
  }
  
  @include media('>=widescreen') {
    @for $i from (1) through $grid-count {
      .#{col-lg}-#{$i} {
        @include make-column($i,20)
      }

      .#{col-lg-offset}-#{$i} {
        @include make-offset($i,20)
      }
    }
  }

  .container{
    margin: 0 auto;
    @if $container-gutter {
      @include make-gutter($container-gutter);
      max-width: ($container-width + $container-gutter);
    } @else {
      @include make-gutter($grid-gutter);
      max-width: ($container-width + $grid-gutter);
    }
  }

  .row {
    @include make-row($grid-gutter);
    display: flex;
    flex-wrap: wrap;
  }

  .row-height {
    > [class*="col-"] {
      display: flex;
      flex-wrap: wrap;

      > * {
        width: 100%;
      }
    }
  }
}

@if $usegrid {
  @include make-grid-columns;

  // pull left
  .pull-left {
    float: left;
  }

  // pull right
  .pull-right {
    float: right;
  }
}
